import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"google_project_iam_member": {
				"gke_hostagent_binding": {
					0: {
						"applied": {
							"condition": [],
							"role":      "roles/container.hostServiceAgentUser",
						},
						"destroy": false,
						"diff": {
							"condition.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"etag": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"member": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"project": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"role": {
								"computed": false,
								"new":      "roles/container.hostServiceAgentUser",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"google_project_service": {
				"gke_svc": {
					0: {
						"applied": {
							"disable_dependent_services": false,
							"disable_on_destroy":         false,
							"service":                    "container.googleapis.com",
							"timeouts":                   null,
						},
						"destroy": false,
						"diff": {
							"disable_dependent_services": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"disable_on_destroy": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"project": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"service": {
								"computed": false,
								"new":      "container.googleapis.com",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"google_project_service_identity": {
				"gke_hostagent_sa": {
					0: {
						"applied": {
							"service":  "container.googleapis.com",
							"timeouts": null,
						},
						"destroy": false,
						"diff": {
							"email": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"project": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"service": {
								"computed": false,
								"new":      "container.googleapis.com",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.14.7"

variables = {
	"project_id": "protected-host-project-2",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources

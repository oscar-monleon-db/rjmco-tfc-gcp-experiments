import "strings"

providers = {
	"google": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  ">= 3.57.0",
	},
	"google-beta": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "google-beta",
		"provider_config_key": "google-beta",
		"version_constraint":  ">= 3.57.0",
	},
}

resources = {
	"google_compute_shared_vpc_service_project.svc_proj_attachment": {
		"address": "google_compute_shared_vpc_service_project.svc_proj_attachment",
		"config": {
			"host_project": {
				"references": [
					"var.host_project_id",
				],
			},
			"service_project": {
				"references": [
					"var.service_project_id",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "svc_proj_attachment",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_shared_vpc_service_project",
	},
}

provisioners = {}

variables = {
	"host_project_id": {
		"default":        null,
		"description":    "GCP host project ID",
		"module_address": "",
		"name":           "host_project_id",
	},
	"service_project_id": {
		"default":        null,
		"description":    "GCP service project ID",
		"module_address": "",
		"name":           "service_project_id",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
